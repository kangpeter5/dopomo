// FONT
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+SC:400,700');
$noto-sc: Noto Sans SC, sans-serif;

// https://coolors.co/5bc0eb-fde74c-9bc53d-fa7921-d64141
// CSS Variables
////////////////
// COLORS
:root {
	--blue: #408FEC;
	--blue--accent: #A1CAFA;
	--blue--light: #8EBDF1;
	--blue--lightest: #F6FAFF;

	--purple: #79589F;
	--purple--accent: #AC8ECE;
	--purple--light: #A997BF;
	--purple--lightest: #F7F3FB;
	
	--green: #74C080;
	--green--accent: #ADE28F;
	--green--light: #ABD7B4;
	--green--lightest: #F8FCF9;
	
	--orange: #FA9F47;
	--orange--accent: #FFD3A0;
	--orange--light: #FBC595;
	--orange--lightest: #FFFAF6;
	
	--red: #D64141;
	--red--accent: #F37A65;
	--red--light: #E58F8F;
	--red--lightest: #FDF6F6;
	
	--gray--1000: #14171B;
	--gray--900: #24292e;
	--gray--800: #2f363d;
	--gray--700: #444d56;
	--gray--600: #586069;
	--gray--500: #6a737d;
	--gray--400: #959da5;
	--gray--300: #d1d5da;
	--gray--200: #e1e4e8;
	--gray--100: #f6f8fa;
	
	--black: #000000;
	--white: #ffffff;

	--black--50: rgba(0,0,0,.5);
	--black--20: rgba(0,0,0,.2);
	--black--10: rgba(0,0,0,.1);
	--black--5: rgba(0,0,0,.05);
	
	--brand--dark: var(--blue);
	--brand: var(--blue);
	--brand--light: var(--blue--light);
	
	--accent--dark: #032E61;
	--accent: var(--blue);
	--accent--light: var(--blue--light);
	
	--primary: var(--blue);
	--primary--accent: var(--blue--accent);
	--primary--light: var(--blue--light);
	
	--danger: var(--red);
	--danger--accent: var(--red--accent);
	--danger--light: var(--red--light);
	
	--warning: var(--orange);
	--warning--accent: var(--orange--accent);
	--warning--light: var(--orange--light);
	
	--success: var(--green);
	--success--accent: var(--green--accent);
	--success--light: var(--green--light);
	
	--info: var(--purple);
	--info--accent: var(--purple--accent);
	--info--light: var(--purple--light);
	
	--default: var(--gray--600);
	--default--accent: var(--gray--600);
	--default--light: var(--gray--500);
	
	--root--bg: var(--gray--100);
	--root--color: var(--gray--900);
	--root--color-secondary: var(--gray--700);
	--root--font: 'Yantramanav';
	--root--text-size: 1rem; // 16px
	
	--component--bg: var(--white);
	--component--bg-accent: var(--gray--100);
}

:root.theme--dark {
	--root--bg: var(--gray--1000);
	--root--color: var(--gray--100);
	--root--color-secondary: var(--gray--400);
	
	--component--bg: var(--gray--900);
	--component--bg-accent: var(--gray--800);
}

// Design Token Maps
$states: (
	primary: primary,
	success: success,
	danger: danger,
	warning: warning,
	info: info,
	default: default
);

$spacing-unit: 8px;

$spacing: (
	xs: $spacing-unit/2,
	sm: $spacing-unit,
	md: $spacing-unit*2,
	lg: $spacing-unit*4,
	xl: $spacing-unit*8,
);

$border-radius: (
	sm: .3rem,
	md: .5rem,
	lg: .7rem
);

$text-sizes: (
	xs: .67em,
	sm: .78em,
	md: var(--root--text-size),
	lg: 1.22em,
	xl: 1.44em,
	xxl: 2em,
);

$elevation: (
	0: 0,
	1: 0px 0px 0px 1px rgba(black, .1),
	2: 0px 3px 6px 1px rgba(black, .1),
	3: 0px 5px 12px 2px rgba(black, .1),
	4: 0px 12px 25px 4px rgba(black, .1),
	5: 0px 18px 36px 6px rgba(black, .1)
);

// Functions
@function text-size($size) {
	@if(map-get($text-sizes, $size)) {
		@return map-get($text-sizes, $size);
	}
	@else {
		@warn "That spacing size does not exist."
	}
};

@function spacing($size) {
	@if(map-get($spacing, $size)) {
		@return map-get($spacing, $size);
	}
	@else {
		@warn "That spacing size does not exist."
	}
};

@function border-radius($size) {
	@if(map-get($border-radius, $size)) {
		@return map-get($border-radius, $size);
	}
	@else {
		@warn "That radius size does not exist."
	}
};

@function shadow($size) {
	@if(map-get($elevation, $size)) {
		@return map-get($elevation, $size);
	}
	@else {
		@warn "That elevation size does not exist."
	}
};
//
//  Responsive
// -----------------------

$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: max) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

//
//  Mixins
// ------------------------

@mixin clearfix(){
	content: "";
	clear: both;
	height: 0;
	visibility: hidden;
	display: block;
}
@mixin clear(){
	&:after{
		@include clearfix();
	}
}
@mixin center($position: absolute){
	position: $position;
	top: 50%;
	left: 50%;
	@include translate(-50%,-50%);
}

@mixin dont-show-text(){
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
	display: block;
}
@mixin fill-parent(){
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}
@mixin absolute-center(){
	@include fill-parent();
	margin: auto;
}
@mixin size($width, $height){
	width	: $width;
	height	: $height;
}
@mixin square($size){
	width	: $size;
	height	: $size;
}
@mixin backface(){
	-ms-backface-visibility     : hidden;
	-webkit-backface-visibility	: hidden;
	-moz-backface-visibility	: hidden;
	backface-visibility			: hidden;
}
@mixin background-treatment($size: contain, $pos: #{"center center"}){
	background-size: $size;
	background-position: $pos;
	background-repeat: no-repeat;
}
@mixin outer-container(){
	width: 100%;
	max-width: 1200px;
	padding: 0 15px;
	margin: 0 auto;
}
@mixin white-border($width){
	border: $width solid #FFF;
}
@mixin aspect-ratio($width, $height){
	position: relative;
	
  &:before {
    display: block;
    content: '';
    width: 100%;
    height: 0;
    padding-top: ($height / $width) * 100%;
  }
}
// transition, transform, scale, rotate, etc  //
@mixin transition($transition){
	-webkit-transition	: $transition;
	-moz-transition		: $transition;
	-ms-transition		: $transition;
	-o-transition		: $transition;
	transition			: $transition;
    //@include backface();
}
@mixin transform($transform){
	-webkit-transform	: $transform;
	-moz-transform		: $transform;
	-ms-transform		: $transform;
	-o-transform		: $transform;
	transform			: $transform;
}
@mixin scale($factor){
	@include transform(scale($factor));
}
@mixin rotate($degrees){  //  use:  @include rotate(15deg); ie, explicitly include units
	@include transform(rotate($degrees));
}
@mixin rotateY($degrees){
	@include transform(rotateY($degrees));
}
@mixin translate($x, $y){
	@include transform(translate($x, $y));
}
@mixin translate3d($x, $y, $z: 0){
	-ms-transform: translate($x, $y);
	@include transform(translate3d($x, $y, $z));
}
@mixin transform-origin($o){
	-webkit-transform-origin	: $o;
	-moz-transform-origin		: $o;
	-ms-transform-origin		: $o;
	-o-transform-origin			: $o;
	transform-origin			: $o;
}
@mixin translate-center-h(){
	-ms-transform: translate(-50%, 0);
	@include translate3d(-50%, 0, 0);
}

// END MIXINS
//------------------------------

// BASE
body {
	//background-color: var(--purple--accent);
  margin: 0;
  padding: 0;
  font: 100% $noto-sc;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root{
	max-width: 840px;
	margin: 0 auto;
	padding: 0 20px;
}

h1{
	font-size: text-size(xxl);
}

h3{
	margin: 0;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}
.container{
	margin-bottom: spacing(lg);
}
section {
  float: left;
	width: 50%;
	margin: auto;
	
	@include mq('tablet-wide'){
	  float: none!important;
	  width: 100%;
	}
}

// BUTTONS
button{
	font: 100% $noto-sc;
	width: 120px;
  border: 0;
	border-radius: border-radius(sm);
	padding: spacing(xs) spacing(md);
  font-size: text-size(md);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: auto;
  text-align: center;
	opacity: 0.7;
  color: #fff;
  box-shadow: shadow(2), shadow(3);
}
.btn{
	@include transition(all 120ms);
	
	&--primary{
		background: linear-gradient(to right, var(--primary), var(--primary--light));

		&:hover,
		&:focus {
			background: linear-gradient(to right, var(--primary), var(--primary));
		}
	}
	&--success{
		background: linear-gradient(to right, var(--success), var(--success--light));
	
		&:hover,
		&:focus {
			background: linear-gradient(to right, var(--success), var(--success));
		}
	}
	&--danger{
		box-shadow: none;
		border-radius: 0;
		border-bottom: 2px solid var(--danger--light);
		padding-bottom: 2px;
		color: var(--danger);

		&:hover,
		&:focus {
			border-bottom: 2px solid var(--danger);
		}
	}
}


@include mq('phone-wide'){
	section {
		float: none!important;
		width: 100%;
	}
}